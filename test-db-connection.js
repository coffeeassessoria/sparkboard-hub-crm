import mysql from 'mysql2/promise';
import dotenv from 'dotenv';
dotenv.config();

async function testDatabaseConnection() {
  console.log('üîç Testando conex√£o com o banco de dados...');
  console.log('üìã URL do banco:', process.env.DATABASE_URL || 'N√£o configurada');
  
  if (!process.env.DATABASE_URL) {
    console.error('‚ùå DATABASE_URL n√£o est√° configurada no arquivo .env');
    console.log('\nüìù Configure a vari√°vel DATABASE_URL no arquivo .env:');
    console.log('DATABASE_URL="mysql://usuario:senha@host:porta/nome_do_banco"');
    process.exit(1);
  }

  try {
    // Criar conex√£o usando a URL do banco
    const connection = await mysql.createConnection(process.env.DATABASE_URL);
    
    console.log('‚úÖ Conex√£o estabelecida com sucesso!');
    
    // Testar uma query simples
    const [rows] = await connection.execute('SELECT 1 as test');
    console.log('‚úÖ Query de teste executada:', rows[0]);
    
    // Verificar se as tabelas do Prisma existem
    try {
      const [tables] = await connection.execute(`
        SELECT TABLE_NAME 
        FROM INFORMATION_SCHEMA.TABLES 
        WHERE TABLE_SCHEMA = DATABASE()
      `);
      
      console.log('\nüìä Tabelas encontradas no banco:');
      if (tables.length === 0) {
        console.log('‚ö†Ô∏è  Nenhuma tabela encontrada. Execute "npx prisma db push" para criar as tabelas.');
      } else {
        tables.forEach(table => {
          console.log(`  - ${table.TABLE_NAME}`);
        });
      }
    } catch (error) {
      console.log('‚ö†Ô∏è  N√£o foi poss√≠vel listar as tabelas:', error.message);
    }
    
    await connection.end();
    console.log('\nüéâ Teste de conex√£o conclu√≠do com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro ao conectar com o banco de dados:');
    console.error('üìù C√≥digo do erro:', error.code || 'N/A');
    console.error('üìù Mensagem:', error.message || 'Erro desconhecido');
    console.error('üìù Stack:', error.stack || 'N/A');
    
    if (error.code === 'ENOTFOUND') {
      console.log('\nüí° Dicas para resolver (Host n√£o encontrado):');
      console.log('  - Verifique se o host do banco est√° correto');
      console.log('  - Para desenvolvimento local, use "localhost" ou "127.0.0.1"');
      console.log('  - Para produ√ß√£o, use o host fornecido pelo provedor (ex: Hostinger)');
      console.log('  - Verifique sua conex√£o com a internet');
    } else if (error.code === 'ER_ACCESS_DENIED_ERROR') {
      console.log('\nüí° Dicas para resolver (Acesso negado):');
      console.log('  - Verifique o usu√°rio e senha do banco');
      console.log('  - Verifique se o usu√°rio tem permiss√µes no banco');
    } else if (error.code === 'ER_BAD_DB_ERROR') {
      console.log('\nüí° Dicas para resolver (Banco n√£o encontrado):');
      console.log('  - Verifique se o nome do banco de dados est√° correto');
      console.log('  - Verifique se o banco de dados existe');
    } else if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° Dicas para resolver (Conex√£o recusada):');
      console.log('  - Verifique se o servidor MySQL est√° rodando');
      console.log('  - Verifique se a porta est√° correta (geralmente 3306)');
      console.log('  - Para desenvolvimento local, inicie o servidor MySQL');
    }
    
    console.log('\nüîß Configura√ß√£o atual:');
    console.log('  DATABASE_URL:', process.env.DATABASE_URL);
    
    process.exit(1);
  }
}

// Executar o teste
testDatabaseConnection();